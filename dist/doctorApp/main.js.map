{"version":3,"sources":["./src/guards/login.guard.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/services/transfer.service.ts","./src/services/local-storage.service.ts","./src/app/book-appointment/book-appointment.component.html","./src/app/book-appointment/book-appointment.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/services/crud.service.ts","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/appointments/appointments.component.ts","./src/app/appointments/appointments.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/guards/admin.guard.ts","./src/app/login-register/login-register.component.ts","./src/app/login-register/login-register.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageService } from 'src/services/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  constructor(private route: Router, private ls: LocalStorageService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    let ans_storage = localStorage.getItem('useremail');\n    if (ans_storage === null) {\n      return true;\n    }\n    else {\n      this.route.navigate(['/'])\n      return false;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransferService {\n  public obj_userData = new Subject();\n\n  constructor() { }\n\n  userDataToTransfer(dataFromComp: any) {\n    this.obj_userData.next(dataFromComp);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  storeData(key: any, val: any) {\n    localStorage.setItem(key, val);\n  }\n  getData(key: any) {\n    localStorage.getItem(key);\n  }\n  removeData(key: any) {\n    localStorage.removeItem(key);\n  }\n}\n","<form>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th scope=\"col\">Sr. No</th>\n                <th scope=\"col\">Doctor Name</th>\n                <th scope=\"col\">Mobile</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Select Slot</th>\n                <th scope=\"col\"></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let doc of doctorList; index as i\">\n                <th scope=\"row\">{{i+1}}</th>\n                <td><span>{{doc.fullName}}</span></td>\n                <td>{{doc.mobile}}</td>\n                <td>{{doc.emailid}}</td>\n                <td><input type=\"date\" class=\"form-control\" #slotDate /></td>\n                <td><input type=\"button\" class=\"btn btn-primary\" value=\"Book Now\"\n                        (click)=\"bookNow(doc.id, slotDate.value)\">\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from 'src/services/crud.service';\n\n@Component({\n  selector: 'app-book-appointment',\n  templateUrl: './book-appointment.component.html',\n  styleUrls: ['./book-appointment.component.css']\n})\nexport class BookAppointmentComponent implements OnInit {\n  public doctorList: any = [];\n  public patientList: any = [];\n\n  constructor(private crud: CrudService) { }\n  loadDocotrs() {\n    this.crud.getData('doctorsInfo').subscribe(\n      (res: any) => {\n        this.doctorList = res\n      },\n      (err) => { }\n    );\n  }\n\n  bookNow(id: any, slotDate: any) {\n    var patientName = localStorage.getItem('username')\n    var patientEmail = localStorage.getItem('useremail')\n    console.log(id, slotDate, patientName)\n    var obj: any = { docId: id, bookedSlot: slotDate, patientName: patientName, patientEmail: patientEmail };\n    // this.crud.updateData(path, obj).subscribe(\n    //   (res: any) => {\n    //     console.log(res)\n    //   },\n    //   (err: any) => {\n    //     console.log(err)\n    //   }\n    // );\n    this.crud.postData('bookinginfo', obj).subscribe(\n      (res: any) => {\n        console.log(res)\n      },\n      (err: any) => {\n        console.log(err)\n      }\n    );\n\n  }\n\n  ngOnInit(): void {\n    this.loadDocotrs()\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Doctor Appointment';\n}\n","<app-header></app-header>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n  public apiPath: any = 'http://localhost:3000/';\n\n  constructor(private httpData: HttpClient) { }\n\n  getData(apiParameter: any) {\n    var finalPath = this.apiPath + apiParameter;\n    var result = this.httpData.get(finalPath);\n    return result;\n  }\n  postData(keypath: any, record: any) {\n    var finalPath = this.apiPath + keypath;\n\n    var result = this.httpData.post(finalPath, record)\n    return result;\n  }\n  updateData(keypath: any, record: any) {\n    var finalPath = this.apiPath + keypath;\n\n    var result = this.httpData.put(finalPath, record)\n    return result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginRegisterComponent } from './login-register/login-register.component';\nimport { BookAppointmentComponent } from './book-appointment/book-appointment.component';\nimport { AppointmentsComponent } from './appointments/appointments.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    LoginRegisterComponent,\n    BookAppointmentComponent,\n    AppointmentsComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- Nav Bar Start -->\n<div class=\"nav\">\n    <div class=\"container\">\n        <nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n            <h4>{{usName}}</h4>\n            <a href=\"#\" class=\"navbar-brand\">MENU</a>\n            <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\n                <div class=\"navbar-nav mr-auto\">\n                    <a routerLink=\"/\" [routerLinkActiveOptions]=\"{exact: true}\" routerLinkActive=\"active\"\n                        class=\"nav-item nav-link\">Home</a>\n                    <a routerLink=\"/book-appointment\" routerLinkActive=\"active\" class=\"nav-item nav-link\"\n                        *ngIf=\"loggedStatus && isPatient\">Book Appointment</a>\n                    <a routerLink=\"/appointments\" routerLinkActive=\"active\" class=\"nav-item nav-link\"\n                        *ngIf=\"loggedStatus && isDoctor\">Appointments</a>\n                    <a routerLink=\"/login\" routerLinkActive=\"active\" class=\"nav-item nav-link\"\n                        *ngIf=\"!loggedStatus\">Login</a>\n                    <a routerLink=\"/register\" routerLinkActive=\"active\" class=\"nav-item nav-link\"\n                        *ngIf=\"!loggedStatus\">Register</a>\n                    <a routerLink=\"/logout\" routerLinkActive=\"active\" class=\"nav-item nav-link\"\n                        *ngIf=\"loggedStatus\">Logout</a>\n                </div>\n            </div>\n        </nav>\n    </div>\n</div>\n<!-- Nav Bar End -->","import { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'src/services/local-storage.service';\nimport { TransferService } from 'src/services/transfer.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  public loggedStatus: Boolean = false;\n  public isDoctor: Boolean = false;\n  public isPatient: Boolean = false;\n  public usName: any = ''\n  constructor(private ls: LocalStorageService, private ts: TransferService) { }\n\n  ngOnInit(): void {\n    var ans_name = localStorage.getItem('username');\n    var ans_storage = localStorage.getItem('useremail');\n    var doctorOrPatient: any = localStorage.getItem('doctororpatient');\n    if (ans_storage === null) {\n      this.loggedStatus = false\n      this.usName = ''\n    }\n    else {\n      this.loggedStatus = true;\n      this.usName = ans_name;\n    }\n\n    if (doctorOrPatient == 'Doctor') {\n      this.isPatient = false\n      this.isDoctor = true\n    } else if (doctorOrPatient == 'Patient') {\n      this.isPatient = true\n      this.isDoctor = false\n    }\n\n    this.ts.obj_userData.subscribe(\n      (res: any) => {\n        if (res['loginStatus']) {\n          this.usName = res['username']\n          this.loggedStatus = res['loginStatus']\n\n          if (res['doctororpatient'] == 'Doctor') {\n            this.isPatient = false\n            this.isDoctor = true\n          } else {\n            this.isPatient = true\n            this.isDoctor = false\n          }\n        } else {\n          this.loggedStatus = false\n          this.usName = ''\n        }\n      },\n      (err: any) => { console.log(err) }\n    )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-appointments',\n  templateUrl: './appointments.component.html',\n  styleUrls: ['./appointments.component.css']\n})\nexport class AppointmentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>appointments works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from 'src/services/local-storage.service';\nimport { TransferService } from 'src/services/transfer.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private router: Router, private ls: LocalStorageService, private ts: TransferService) { }\n\n  ngOnInit(): void {\n    // localStorage.clear();\n    localStorage.removeItem('username');\n    localStorage.removeItem('useremail');\n    localStorage.removeItem('doctororpatient');\n    this.ts.userDataToTransfer({ loginStatus: false, username: '' })\n    this.router.navigate(['/']);\n  }\n\n}\n","<p>logout works!</p>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LocalStorageService } from 'src/services/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private route: Router, private ls: LocalStorageService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    let ans_storage: any = localStorage.getItem('useremail');\n    let ans_status: any = localStorage.getItem('doctororpatient');\n    if (ans_storage === null && ans_status === null) {\n      this.route.navigate(['/login'])\n      return false;\n    }\n    else {\n      if (ans_status == \"Doctor\") {\n        return true;\n      }\n      else {\n        this.route.navigate(['/'])\n        return false;\n      }\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CrudService } from 'src/services/crud.service';\nimport { LocalStorageService } from 'src/services/local-storage.service';\nimport { TransferService } from 'src/services/transfer.service';\n\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.css']\n})\nexport class LoginRegisterComponent implements OnInit {\n  public errMsgLogin = '';\n  public errMsgRegister = '';\n\n  constructor(private fb: FormBuilder, private crud: CrudService, private ls: LocalStorageService, private router: Router, private ts: TransferService) { }\n\n  loginForm = this.fb.group({\n    userName: ['', Validators.required],\n    password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]]\n  });\n  registerForm = this.fb.group({\n    fullName: ['', Validators.required],\n    mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n    emailid: ['', [Validators.required, Validators.email]],\n    doctororpatient: ['', [Validators.required]],\n    password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]]// \n  });\n\n  loginAction() {\n    this.crud.getData(`usersInfo?emailid=${this.loginForm.value.userName}` || `doctorsInfo?emailid=${this.loginForm.value.userName}`).subscribe(\n      (res: any) => {\n        if (res.length > 0) {\n          this.errMsgLogin = \"User Logged In\";\n          console.log(res)\n          this.ls.storeData('username', res[0].fullName);\n          this.ls.storeData('useremail', res[0].emailid);\n          this.ts.userDataToTransfer({ loginStatus: true, username: res[0].fullName })\n          this.router.navigate(['/']);\n        }\n        else {\n          this.errMsgLogin = \"Invalid User\";\n        }\n      }\n    )\n\n  }\n  registerAction() {\n    this.crud.getData(`usersInfo?emailid=${this.registerForm.value.emailid}` || `doctorsInfo?emailid=${this.registerForm.value.emailid}`).subscribe(\n      (res: any) => {\n        if (res.length > 0) {\n          this.errMsgRegister = \"User already registered\"\n          this.registerForm.reset();\n        }\n        else {\n          if (this.registerForm.value.doctororpatient == 'Doctor') {\n            console.log(\"Dcotor\")\n            this.crud.postData('doctorsInfo', this.registerForm.value).subscribe(\n              (res: any) => {\n                console.log(res);\n                this.errMsgRegister = \"User added\"\n                this.registerForm.reset();\n              },\n              (err: any) => {\n                this.errMsgRegister = err;\n              }\n            )\n          }\n          else {\n            console.log(\"Patient\")\n            this.crud.postData('usersInfo', this.registerForm.value).subscribe(\n              (res: any) => {\n                console.log(res);\n                this.errMsgRegister = \"User added\"\n                this.registerForm.reset();\n              },\n              (err: any) => {\n                this.errMsgRegister = err;\n              }\n            )\n          }\n        }\n      },\n      (error) => { }\n    )\n\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row justify-content-center\">\n    <div class=\"col-md-6\">\n        <h2>Login</h2>\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginAction()\">\n                    <div class=\"form-group\">\n                        <label for=\"\">Username</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Username\" formControlName=\"userName\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"loginForm.controls['userName'].invalid && (loginForm.controls['userName'].dirty || loginForm.controls['userName'].touched)\">Username\n                            required</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"\">Password</label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"loginForm.controls['password'].invalid && (loginForm.controls['password'].dirty || loginForm.controls['password'].touched)\">Password\n                            required</small>\n                        <small class=\"text-danger\" *ngIf=\"\">Password required</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\" [disabled]=\"!loginForm.valid\" />\n                    </div>\n                    <p>Message : {{errMsgLogin}}</p>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-6\">\n        <h2>Register</h2>\n        <div class=\"row\">\n            <div class=\"col-md-10\">\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerAction()\">\n                    <div class=\"form-group\">\n                        <label for=\"\">Name</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Full Name\" formControlName=\"fullName\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"registerForm.controls['fullName'].invalid && (registerForm.controls['fullName'].dirty || registerForm.controls['fullName'].touched)\">Full\n                            Name is required</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"\">Mobile</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Mobile\" formControlName=\"mobile\">\n                        <small class=\"text-danger\" *ngIf=\"registerForm.controls['mobile'].invalid && (registerForm.controls['mobile'].dirty ||\n                            registerForm.controls['mobile'].touched)\">Mobile\n                            number required</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"\">Email Id</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Email Id\" formControlName=\"emailid\">\n                        <div *ngIf=\"registerForm.controls['emailid'].invalid && (registerForm.controls['emailid'].dirty ||\n                        registerForm.controls['emailid'].touched)\">\n                            <!-- myForm.controls['username'].invalid && (myForm.controls['username'].dirty ||\n                             myForm.controls['username'].touched) registerForm.controls['emailid'].hasError('required')-->\n                            <small class=\"text-danger\">Email id required</small>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <p>Tell us who you are?</p>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"doctororpatient\" id=\"patient\"\n                                value=\"Patient\" checked>\n                            <label class=\"form-check-label\" for=\"patient\">Patient</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"doctororpatient\" id=\"doctor\"\n                                value=\"Doctor\">\n                            <label class=\"form-check-label\" for=\"doctor\">Doctor</label>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"\">Password</label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\">\n                        <small class=\"text-danger\"\n                            *ngIf=\"registerForm.controls['password'].invalid && (registerForm.controls['password'].dirty || registerForm.controls['password'].touched)\">Password\n                            required</small>\n                        <small class=\"text-danger\" *ngIf=\"\">Password required</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"submit\" class=\"btn btn-primary\" value=\"Sign Up\" [disabled]=\"!registerForm.valid\" />\n                    </div>\n\n                    <p>Message = {{errMsgRegister}}</p>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from 'src/guards/admin.guard';\nimport { LoginGuard } from 'src/guards/login.guard';\nimport { AppointmentsComponent } from './appointments/appointments.component';\nimport { BookAppointmentComponent } from './book-appointment/book-appointment.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginRegisterComponent } from './login-register/login-register.component';\nimport { LogoutComponent } from './logout/logout.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginRegisterComponent, canActivate: [LoginGuard] },\n  { path: 'register', component: LoginRegisterComponent, canActivate: [LoginGuard] },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'book-appointment', component: BookAppointmentComponent },\n  { path: 'appointments', component: AppointmentsComponent, canActivate: [AdminGuard] },\n  { path: '', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}